syntax = "proto3";

package api.users;

option go_package = "api/internal/proto/users;usersservice";

message Notifications {
  int32 id = 1;
  int32 facility_id = 2;
  string building = 3;
  repeated Users users = 4;
}

message Users {
  string id = 1;
  string name = 2;
  optional string image = 3;
  string email = 4;
  string email_verified = 5; // RFC3339 string
  optional string password = 6;
  optional string provider = 7;
  bool external_user = 8;
  string role = 9;
  string created_at = 10; // RFC3339 string
  bool tos = 11;
}

message VerificationToken {
  string identifier = 1;
  string token = 2;
  string expires = 3;  // RFC3339 string
}


service UsersService {
  rpc GetUserByEmail (UserByEmailRequest) returns (Users);
  rpc GetUser (GetUserRequest) returns (Users);
  rpc GetUsers (GetUsersRequest) returns (GetUsersResponse){
    option idempotency_level = NO_SIDE_EFFECTS;
  };
  rpc CreateUser (CreateUserRequest) returns (Users);
  rpc UpdateUser (UpdateUserRequest) returns (Users);
  rpc DeleteUser (DeleteUserRequest) returns (DeleteUserResponse);
  rpc GetNotifications (GetNotificationsRequest) returns (GetNotificationsResponse){
    option idempotency_level = NO_SIDE_EFFECTS;
  };
  rpc GetUserNotifications (GetUserNotificationsRequest) returns (GetUserNotificationsResponse){
    option idempotency_level = NO_SIDE_EFFECTS;
  };
  rpc CreateNotification (CreateNotificationRequest) returns (Notifications);
  rpc EditNotification (EditNotificationRequest) returns (Notifications);
  rpc DeleteNotification (DeleteNotificationRequest) returns (DeleteNotificationResponse);

}

message GetUserNotificationsResponse {
  repeated Notifications notifications = 1;
}
message GetNotificationsResponse {
  repeated Notifications notifications = 1;
}

message GetUsersResponse {
  repeated Users users = 1;
}
message UserByEmailRequest {
  string email = 1;
}

message GetUserRequest {
  string id = 1;
}
message GetUsersRequest {}

message CreateUserRequest {
 Users user = 1;
}

message UpdateUserRequest {
  Users user = 1;
}

message DeleteUserRequest {
  string id = 1;
}
message DeleteUserResponse {}
message GetNotificationsRequest {}
message GetUserNotificationsRequest {
  string user_id = 1;
}
message CreateNotificationRequest {
  Notifications notification = 1;
}
message EditNotificationRequest {
  Notifications notification = 1;
}
message DeleteNotificationRequest {
  int64 id = 1;
}
message DeleteNotificationResponse {}


